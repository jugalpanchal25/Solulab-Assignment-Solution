{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\react-coding-solutions-master\\\\react-coding-solutions-master\\\\chatter\\\\src\\\\components\\\\Messages\\\\components\\\\Messages.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useContext, useState, useCallback } from 'react';\nimport io from 'socket.io-client';\nimport useSound from 'use-sound';\nimport config from '../../../config';\nimport LatestMessagesContext from '../../../contexts/LatestMessages/LatestMessages';\nimport INITIAL_BOTTY_MESSAGE from '../../../common/constants/initialBottyMessage';\nimport TypingMessage from './TypingMessage';\nimport Header from './Header';\nimport Footer from './Footer';\nimport Message from './Message';\nimport '../styles/_messages.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ME = 'me';\nconst BOT = 'bot';\nconst INITIAL_MESSAGE = {\n  message: INITIAL_BOTTY_MESSAGE,\n  id: Date.now(),\n  user: BOT\n};\nconst socket = io(config.BOT_SERVER_ENDPOINT, {\n  transports: ['websocket', 'polling', 'flashsocket']\n});\n\nfunction scrollToBottomOfMessages() {\n  const list = document.getElementById('message-list');\n  list.scrollTo({\n    top: list.scrollHeight,\n    behavior: 'smooth'\n  });\n}\n\nfunction Messages() {\n  _s();\n\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([INITIAL_MESSAGE]);\n  const [botTyping, setBotTyping] = useState(false);\n  const [playSend] = useSound(config.SEND_AUDIO_URL);\n  const [playReceive] = useSound(config.RECEIVE_AUDIO_URL);\n  const {\n    setLatestMessage\n  } = useContext(LatestMessagesContext);\n  useEffect(() => {\n    socket.off('bot-message');\n    socket.on('bot-message', message => {\n      setBotTyping(false);\n      setMessages([...messages, {\n        message,\n        user: BOT,\n        id: Date.now()\n      }]);\n      setLatestMessage(BOT, message);\n      playReceive();\n      scrollToBottomOfMessages();\n    });\n  }, [messages]);\n  useEffect(() => {\n    document.getElementById('user-message-input').focus();\n    socket.on('bot-typing', () => {\n      setBotTyping(true);\n      scrollToBottomOfMessages();\n    });\n  }, []);\n  const sendMessage = useCallback(() => {\n    if (!message) {\n      return;\n    }\n\n    setMessages([...messages, {\n      message,\n      user: ME,\n      id: Date.now()\n    }]);\n    playSend();\n    scrollToBottomOfMessages();\n    socket.emit('user-message', message);\n    setMessage('');\n    document.getElementById('user-message-input').value = '';\n  }, [messages, message]);\n\n  const onChangeMessage = ({\n    target: {\n      value\n    }\n  }) => {\n    setMessage(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"messages\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages__list\",\n      id: \"message-list\",\n      children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(Message, {\n        message: message,\n        nextMessage: messages[index + 1],\n        botTyping: botTyping\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)), botTyping ? /*#__PURE__*/_jsxDEV(TypingMessage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 22\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {\n      message: message,\n      sendMessage: sendMessage,\n      onChangeMessage: onChangeMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Messages, \"00K85+1lyAjnDCJjsLNzRvhrEQE=\", false, function () {\n  return [useSound, useSound];\n});\n\n_c = Messages;\nexport default Messages;\n\nvar _c;\n\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"sources":["C:/Users/DELL/Desktop/react-coding-solutions-master/react-coding-solutions-master/chatter/src/components/Messages/components/Messages.js"],"names":["React","useEffect","useContext","useState","useCallback","io","useSound","config","LatestMessagesContext","INITIAL_BOTTY_MESSAGE","TypingMessage","Header","Footer","Message","ME","BOT","INITIAL_MESSAGE","message","id","Date","now","user","socket","BOT_SERVER_ENDPOINT","transports","scrollToBottomOfMessages","list","document","getElementById","scrollTo","top","scrollHeight","behavior","Messages","setMessage","messages","setMessages","botTyping","setBotTyping","playSend","SEND_AUDIO_URL","playReceive","RECEIVE_AUDIO_URL","setLatestMessage","off","on","focus","sendMessage","emit","value","onChangeMessage","target","map","index"],"mappings":"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","sourcesContent":["import React, { useEffect, useContext, useState, useCallback } from 'react';\nimport io from 'socket.io-client';\nimport useSound from 'use-sound';\nimport config from '../../../config';\nimport LatestMessagesContext from '../../../contexts/LatestMessages/LatestMessages';\nimport INITIAL_BOTTY_MESSAGE from '../../../common/constants/initialBottyMessage';\nimport TypingMessage from './TypingMessage';\nimport Header from './Header';\nimport Footer from './Footer';\nimport Message from './Message';\nimport '../styles/_messages.scss';\n\nconst ME = 'me';\nconst BOT = 'bot';\nconst INITIAL_MESSAGE = {\n  message: INITIAL_BOTTY_MESSAGE,\n  id: Date.now(),\n  user: BOT\n};\n\nconst socket = io(\n  config.BOT_SERVER_ENDPOINT,\n  { transports: ['websocket', 'polling', 'flashsocket'] }\n);\n\nfunction scrollToBottomOfMessages() {\n  const list = document.getElementById('message-list');\n\n  list.scrollTo({ top: list.scrollHeight, behavior: 'smooth' });\n}\n\nfunction Messages() {\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([INITIAL_MESSAGE]);\n  const [botTyping, setBotTyping] = useState(false);\n  const [playSend] = useSound(config.SEND_AUDIO_URL);\n  const [playReceive] = useSound(config.RECEIVE_AUDIO_URL);\n  const { setLatestMessage } = useContext(LatestMessagesContext);\n\n  useEffect(() => {\n    socket.off('bot-message');\n    socket.on('bot-message', (message) => {\n      setBotTyping(false);\n\n      setMessages([...messages, { message, user: BOT, id: Date.now() }]);\n\n      setLatestMessage(BOT, message);\n\n      playReceive();\n\n      scrollToBottomOfMessages();\n    });\n\n  }, [messages]);\n\n  useEffect(() => {\n    document.getElementById('user-message-input').focus()\n\n    socket.on('bot-typing', () => {\n      setBotTyping(true);\n\n      scrollToBottomOfMessages();\n    });\n  }, []);\n\n  const sendMessage = useCallback(() => {\n    if (!message) { return; }\n\n    setMessages([...messages, { message, user: ME, id: Date.now() }]);\n\n    playSend();\n\n    scrollToBottomOfMessages();\n\n    socket.emit('user-message', message);\n\n    setMessage('');\n\n    document.getElementById('user-message-input').value = '';\n  }, [messages, message]);\n\n  const onChangeMessage = ({ target: { value }}) => {\n    setMessage(value)\n  };\n\n  return (\n    <div className=\"messages\">\n      <Header />\n      <div className=\"messages__list\" id=\"message-list\">\n        {messages.map((message, index) => (\n          <Message message={message} nextMessage={messages[index + 1]} botTyping={botTyping} />\n        ))}\n        {botTyping ? <TypingMessage /> : null}\n      </div>\n      <Footer message={message} sendMessage={sendMessage} onChangeMessage={onChangeMessage} />\n    </div>\n  );\n}\n\nexport default Messages;\n"]},"metadata":{},"sourceType":"module"}